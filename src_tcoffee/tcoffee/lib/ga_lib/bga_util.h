Decoded_chromosome *decode_chromosome (Chromosome *A, Decoded_chromosome *B, Parameter *PARAM);
Chromosome         *code_chromosome ( Decoded_chromosome *A, Chromosome *B, Parameter *PARAM);
Decoded_chromosome *copy_decoded_chromosome ( Decoded_chromosome *A, Decoded_chromosome *B, Parameter *PARAM);
Chromosome         *copy_chromosome ( Chromosome *A, Chromosome *B, Parameter *PARAM);
Chromosome         *extract_chrom ( Population *POP, int G, int i, Chromosome *A, Parameter *PARAM);
void insert_chrom  ( Chromosome *A, Population *POP, int G, int i, Parameter *PARAM);
void copy_individual ( Population *POP, int G0, int i0,int G1, int i1, Parameter *PARAM); 
int is_dup (Chromosome *A, Population *L_POP, int **m_t, int tot_g1, Parameter *PARAM);
int float_flip ( float proba);
void reasses_local_bias (Population *POP, int G, Parameter *PARAM, int gen, int stab);
void input_parameter ( char *name1, char *name_type, int interactive, Parameter *PARAM);
void set_name ( char *full_name, char *path, char *fname);
int is_full_name ( char *fname);
Decoded_chromosome *get_mem_free_decoded_chrom ( Parameter *PARAM);
void free_mem_dc ( Decoded_chromosome *D, Parameter *PARAM);
void identify_operating_system ( Parameter *PARAM);
void setenv_func ( char *string_name, char *string_value);
int int_fabs ( int k);
FILE *get_number_list_in_file ( FILE *fp, int *list, int *n, int *max_len);
void crash2(int a, int b);
